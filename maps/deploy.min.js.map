{"version":3,"sources":["events.js","helpers.js","deploy.js"],"names":["events","topics","hOP","hasOwnProperty","subscribe","topic","listener","call","index","push","remove","publish","info","forEach","item","undefined","classNames","classes","i","arguments","length","arg","argType","Array","isArray","apply","key","substr","deploy","DeployDropDown","React","createClass","displayName","loadingSub","loadingDoneSub","errorSub","getInitialState","loading","loaded","opened","loadingText","errorText","fetched","last_fetched","componentDidMount","self","this","text","setState","success","componentWillUnmount","handleClick","e","preventDefault","Q","$","ajax","type","dataType","url","props","project_url","then","waitForFetchToComplete","fetchStatusError","done","fetchData","getFetchStatus","data","status","Deferred","d","reject","promise","href","message","responseText","lastFetchedHandler","time_ago","render","form","deploy-dropdown","state","open","createElement","ErrorMessages","DeployForm","env_url","className","onClick","aria-hidden","EnvironmentName","environmentName","env_name","selectedTab","gitData","Tabs","selectHandler","id","action","DeployTabSelector","onSelect","DeployTabs","SecurityToken","selectors","map","tab","DeployTabSelect","active","name","tabs","DeployTab","summary","getInitialSummaryState","options","sha","changes","messages","validationCode","estimatedTime","initialState","OptionChangeHandler","event","target","checked","SHAChangeHandler","value","changeHandler","summaryData","findDOMNode","refs","sha_selector","SecurityID","attrname","bind","showOptions","advanced_opts","showVerifyButton","field_type","shaChosen","selector","tab-pane","clearfix","SelectorDropdown","ref","SelectorText","AdvancedOptions","verifyButton","VerifyButton","disabled","htmlFor","field_id","field_label","DeployPlan","select2","field_data","on","style","width","onChange","loading_changes","loadingDone","deployHandler","console","log","strategy","window","location","error","canDeploy","isEmpty","obj","showNoChangesMessage","actionTitle","code","deployAction","EstimatedTime","headerClasses","header","inactive","MessageList","SummaryTable","idx","Message","classMap","warning","classname","role","summaryLines","Object","keys","from","to","SummaryLine","UnchangedSummaryLine","substring","scope","urls","document","getElementById"],"mappings":"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","file":"deploy.min.js","sourcesContent":["var events = (function () {\n\n\n\t/**\n\t * A simple pub sub event handler for intercomponent communication\n\t *\n\t * @type {{subscribe, publish}}\n\t */\n\tvar events = (function(){\n\n\t\tvar topics = {};\n\n\t\tvar hOP = topics.hasOwnProperty;\n\n\t\treturn {\n\t\t\tsubscribe: function(topic, listener) {\n\t\t\t\t// Create the topic's object if not yet created\n\t\t\t\tif(!hOP.call(topics, topic)) topics[topic] = [];\n\n\t\t\t\t// Add the listener to queue\n\t\t\t\tvar index = topics[topic].push(listener) -1;\n\n\t\t\t\t// Provide handle back for removal of topic\n\t\t\t\treturn {\n\t\t\t\t\tremove: function() {\n\t\t\t\t\t\tdelete topics[topic][index];\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t},\n\t\t\tpublish: function(topic, info) {\n\t\t\t\t// If the topic doesn't exist, or there's no listeners in queue, just leave\n\t\t\t\tif(!hOP.call(topics, topic)) return;\n\n\t\t\t\t// Cycle through topics queue, fire!\n\t\t\t\ttopics[topic].forEach(function(item) {\n\t\t\t\t\titem(info != undefined ? info : {});\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t})();\n\n\treturn events;\n}());\n","/**\n * Helper class to concatinate strings depeding on a true or false.\n *\n * Example:\n * var classes = classNames({\n *     \"deploy-dropdown\": true,\n *     \"loading\": false,\n *     \"open\": true,\n * });\n *\n * then classes will equal \"deploy-dropdown open\"\n *\n * @returns {string}\n */\nvar classNames = (function () {\n\n\tfunction classNames () {\n\t\tvar classes = '';\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif ('string' === argType || 'number' === argType) {\n\t\t\t\tclasses += ' ' + arg;\n\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tclasses += ' ' + classNames.apply(null, arg);\n\n\t\t\t} else if ('object' === argType) {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (arg.hasOwnProperty(key) && arg[key]) {\n\t\t\t\t\t\tclasses += ' ' + key;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn classes.substr(1);\n\t}\n\treturn classNames;\n}());\n","/** @jsx React.DOM */\n\nvar deploy = (function (events, classNames) {\n\t/**\n\t * DeployDropdown\n\t */\n\tvar DeployDropDown = React.createClass({displayName: \"DeployDropDown\",\n\n\t\tloadingSub: null,\n\n\t\tloadingDoneSub: null,\n\n\t\terrorSub: null,\n\n\t\tgetInitialState: function() {\n\t\t\treturn {\n\t\t\t\tloading: false,\n\t\t\t\tloaded: false,\n\t\t\t\topened: false,\n\t\t\t\tloadingText: \"\",\n\t\t\t\terrorText: \"\",\n\t\t\t\tfetched: true,\n\t\t\t\tlast_fetched: \"\"\n\t\t\t};\n\t\t},\n\t\tcomponentDidMount: function() {\n\t\t\tvar self = this;\n\t\t\t// add subscribers\n\t\t\tthis.loadingSub = events.subscribe('loading', function(text) {\n\t\t\t\tself.setState({\n\t\t\t\t\tloading: true,\n\t\t\t\t\topened: false,\n\t\t\t\t\tsuccess: false,\n\t\t\t\t\tloadingText: text\n\t\t\t\t});\n\t\t\t});\n\t\t\tthis.loadingDoneSub = events.subscribe('loading/done', function() {\n\t\t\t\tself.setState({\n\t\t\t\t\tloading: false,\n\t\t\t\t\tloadingText: '',\n\t\t\t\t\tsuccess: true,\n\t\t\t\t\topened: true\n\t\t\t\t});\n\t\t\t});\n\t\t\tthis.errorSub = events.subscribe('error', function(text) {\n\t\t\t\tself.setState({\n\t\t\t\t\terrorText: text,\n\t\t\t\t\tloading: false,\n\t\t\t\t\tloadingText: '',\n\t\t\t\t\tsuccess: false,\n\t\t\t\t\topened: false\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\tcomponentWillUnmount: function() {\n\t\t\t// remove subscribers\n\t\t\tthis.loadingSub.remove();\n\t\t\tthis.loadingDoneSub.remove();\n\t\t\tthis.errorSub.remove();\n\t\t},\n\t\thandleClick: function(e) {\n\t\t\te.preventDefault();\n\t\t\tevents.publish('loading', \"Fetching latest code…\");\n\t\t\tthis.setState({\n\t\t\t\tfetched: false\n\t\t\t});\n\t\t\tvar self = this;\n\t\t\tQ($.ajax({\n\t\t\t\ttype: \"POST\",\n\t\t\t\tdataType: 'json',\n\t\t\t\turl: this.props.project_url + '/fetch'\n\t\t\t}))\n\t\t\t\t.then(this.waitForFetchToComplete, this.fetchStatusError)\n\t\t\t\t.then(function() {\n\t\t\t\t\tevents.publish('loading/done');\n\t\t\t\t\tself.setState({\n\t\t\t\t\t\tfetched: true\n\t\t\t\t\t})\n\t\t\t\t}).catch(this.fetchStatusError).done();\n\t\t},\n\t\twaitForFetchToComplete:function (fetchData) {\n\t\t\tvar self = this;\n\t\t\treturn this.getFetchStatus(fetchData).then(function (data) {\n\t\t\t\tif (data.status === \"Complete\") {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\t\t\t\tif (data.status === \"Failed\") {\n\t\t\t\t\treturn $.Deferred(function (d) {\n\t\t\t\t\t\treturn d.reject(data);\n\t\t\t\t\t}).promise();\n\t\t\t\t}\n\t\t\t\treturn self.waitForFetchToComplete(fetchData);\n\t\t\t});\n\t\t},\n\t\tgetFetchStatus: function (fetchData) {\n\t\t\treturn Q($.ajax({\n\t\t\t\ttype: \"GET\",\n\t\t\t\turl: fetchData.href,\n\t\t\t\tdataType: 'json'\n\t\t\t}));\n\t\t},\n\t\tfetchStatusError: function(data) {\n\t\t\tvar message  = 'Unknown error';\n\t\t\tif(typeof data.responseText !== 'undefined') {\n\t\t\t\tmessage = data.responseText;\n\t\t\t} else if (typeof data.message !== 'undefined') {\n\t\t\t\tmessage = data.message;\n\t\t\t}\n\t\t\tevents.publish('error', message);\n\t\t},\n\t\tlastFetchedHandler: function(time_ago) {\n\t\t\tthis.setState({last_fetched: time_ago});\n\t\t},\n\t\trender: function() {\n\t\t\tvar classes = classNames({\n\t\t\t\t\"deploy-dropdown\": true,\n\t\t\t\t\"loading\": this.state.loading,\n\t\t\t\t\"open\": this.state.opened,\n\t\t\t\t\"success\": this.state.success\n\t\t\t});\n\n\t\t\tvar form;\n\t\t\tif(this.state.errorText !== \"\") {\n\t\t\t\tform = React.createElement(ErrorMessages, {message: this.state.errorText})\n\t\t\t} else if(this.state.fetched) {\n\t\t\t\tform = React.createElement(DeployForm, {data: this.props.data, env_url: this.props.env_url, lastFetchedHandler: this.lastFetchedHandler})\n\t\t\t}\n\n\t\t\treturn (\n\t\t\t\tReact.createElement(\"div\", null, \n\t\t\t\t\tReact.createElement(\"div\", {className: classes, onClick: this.handleClick}, \n\t\t\t\t\t\tReact.createElement(\"span\", {className: \"status-icon\", \"aria-hidden\": \"true\"}), \n\t\t\t\t\t\tReact.createElement(\"span\", {className: \"time\"}, \"last updated \", this.state.last_fetched), \n\t\t\t\t\t\tReact.createElement(\"span\", {className: \"loading-text\"}, this.state.loadingText), \n\t\t\t\t\t\tReact.createElement(EnvironmentName, {environmentName: this.props.env_name})\n\t\t\t\t\t), \n\t\t\t\t\tform\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t});\n\n\tvar ErrorMessages = React.createClass({displayName: \"ErrorMessages\",\n\t\trender: function() {\n\t\t\treturn (\n\t\t\t\tReact.createElement(\"div\", {className: \"deploy-dropdown-errors\"}, \n\t\t\t\t\tthis.props.message\n\t\t\t\t)\n\t\t\t)\n\t\t}\n\t});\n\n\t/**\n\t * EnvironmentName\n\t */\n\tvar EnvironmentName = React.createClass({displayName: \"EnvironmentName\",\n\t\trender: function () {\n\t\t\treturn (\n\t\t\t\tReact.createElement(\"span\", {className: \"environment-name\"}, \n\t\t\t\t\tReact.createElement(\"i\", {className: \"fa fa-rocket\"}, \" \"), \n\t\t\t\t\t\"Deployment options \", React.createElement(\"span\", {className: \"hidden-xs\"}, \"for \", this.props.environmentName)\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t});\n\n\t/**\n\t * DeployForm\n\t */\n\tvar DeployForm = React.createClass({displayName: \"DeployForm\",\n\t\tgetInitialState: function() {\n\t\t\treturn {\n\t\t\t\tselectedTab: 1,\n\t\t\t\tdata: []\n\t\t\t};\n\t\t},\n\t\tcomponentDidMount: function() {\n\t\t\tthis.gitData();\n\t\t},\n\n\t\tgitData: function() {\n\t\t\tvar self = this;\n\t\t\tQ($.ajax({\n\t\t\t\ttype: \"POST\",\n\t\t\t\tdataType: 'json',\n\t\t\t\turl: this.props.env_url + '/git_revisions'\n\t\t\t})).then(function(data) {\n\t\t\t\tself.setState({\n\t\t\t\t\tdata: data.Tabs\n\t\t\t\t});\n\t\t\t\tself.props.lastFetchedHandler(data.last_fetched);\n\t\t\t}, function(data){\n\t\t\t\tevents.publish('error', data);\n\t\t\t});\n\t\t},\n\n\t\tselectHandler: function(id) {\n\t\t\tthis.setState({selectedTab: id});\n\t\t},\n\t\trender: function () {\n\t\t\treturn (\n\t\t\t\tReact.createElement(\"div\", {className: \"deploy-form-outer clearfix\"}, \n\t\t\t\t\tReact.createElement(\"form\", {className: \"form-inline deploy-form\", action: \"POST\", action: \"#\"}, \n\t\t\t\t\t\tReact.createElement(DeployTabSelector, {data: this.state.data, onSelect: this.selectHandler, selectedTab: this.state.selectedTab}), \n\t\t\t\t\t\tReact.createElement(DeployTabs, {data: this.state.data, selectedTab: this.state.selectedTab, env_url: this.props.env_url, SecurityToken: this.state.SecurityToken})\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t});\n\n\t/**\n\t * DeployTabSelector\n\t */\n\tvar DeployTabSelector = React.createClass({displayName: \"DeployTabSelector\",\n\t\trender: function () {\n\t\t\tvar self = this;\n\t\t\tvar selectors = this.props.data.map(function(tab) {\n\t\t\t\treturn (\n\t\t\t\t\tReact.createElement(DeployTabSelect, {key: tab.id, tab: tab, onSelect: self.props.onSelect, selectedTab: self.props.selectedTab})\n\t\t\t\t);\n\t\t\t});\n\t\t\treturn (\n\t\t\t\tReact.createElement(\"ul\", {className: \"SelectionGroup tabbedselectiongroup nolabel\"}, \n\t\t\t\t\tselectors\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t});\n\n\t/**\n\t * DeployTabSelect\n\t */\n\tvar DeployTabSelect = React.createClass({displayName: \"DeployTabSelect\",\n\t\thandleClick: function(e) {\n\t\t\te.preventDefault();\n\t\t\tthis.props.onSelect(this.props.tab.id)\n\t\t},\n\t\trender: function () {\n\t\t\tvar classes = classNames({\n\t\t\t\t\"active\" : (this.props.selectedTab == this.props.tab.id)\n\t\t\t});\n\t\t\treturn (\n\t\t\t\tReact.createElement(\"li\", {className: classes}, \n\t\t\t\t\tReact.createElement(\"a\", {onClick: this.handleClick, href: \"#deploy-tab-\"+this.props.tab.id}, this.props.tab.name)\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t});\n\n\t/**\n\t * DeployTabs\n\t */\n\tvar DeployTabs = React.createClass({displayName: \"DeployTabs\",\n\t\trender: function () {\n\t\t\tvar self = this;\n\t\t\tvar tabs = this.props.data.map(function(tab) {\n\t\t\t\treturn (\n\t\t\t\t\tReact.createElement(DeployTab, {key: tab.id, tab: tab, selectedTab: self.props.selectedTab, env_url: self.props.env_url, SecurityToken: self.props.SecurityToken})\n\t\t\t\t);\n\t\t\t});\n\n\t\t\treturn (\n\t\t\t\tReact.createElement(\"div\", {className: \"tab-content\"}, \n\t\t\t\t\ttabs\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t});\n\n\t/**\n\t * DeployTab\n\t */\n\tvar DeployTab = React.createClass({displayName: \"DeployTab\",\n\t\tgetInitialState: function() {\n\t\t\treturn {\n\t\t\t\tsummary: this.getInitialSummaryState(),\n\t\t\t\toptions: {},\n\t\t\t\tsha: ''\n\t\t\t};\n\t\t},\n\t\tgetInitialSummaryState: function() {\n\t\t\treturn {\n\t\t\t\tchanges: {},\n\t\t\t\tmessages: [],\n\t\t\t\tvalidationCode: '',\n\t\t\t\testimatedTime: null,\n\t\t\t\tinitialState: true\n\t\t\t}\n\t\t},\n\t\tOptionChangeHandler: function(event) {\n\t\t\tvar options = this.state.options;\n\t\t\toptions[event.target.name] = event.target.checked;\n\t\t\tthis.setState({\n\t\t\t\toptions: options\n\t\t\t});\n\t\t},\n\t\tSHAChangeHandler: function(event) {\n\t\t\tthis.setState({\n\t\t\t\tsha: event.target.value\n\t\t\t});\n\t\t},\n\t\tchangeHandler: function(event) {\n\t\t\tevent.preventDefault();\n\n\t\t\tthis.setState({\n\t\t\t\tsummary: this.getInitialSummaryState()\n\t\t\t});\n\n\t\t\tif(event.target.value === \"\") {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tevents.publish('change_loading');\n\n\t\t\tvar summaryData = {\n\t\t\t\tsha: React.findDOMNode(this.refs.sha_selector.refs.sha).value,\n\t\t\t\tSecurityID: this.props.SecurityToken\n\t\t\t};\n\t\t\t// merge the 'advanced' options if they are set\n\t\t\tfor (var attrname in this.state.options) {\n\t\t\t\tif(this.state.options.hasOwnProperty(attrname)) {\n\t\t\t\t\tsummaryData[attrname] = this.state.options[attrname];\n\t\t\t\t}\n\t\t\t}\n\t\t\tQ($.ajax({\n\t\t\t\ttype: \"POST\",\n\t\t\t\tdataType: 'json',\n\t\t\t\turl: this.props.env_url + '/deploy_summary',\n\t\t\t\tdata: summaryData\n\t\t\t})).then(function(data) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tsummary: data\n\t\t\t\t});\n\t\t\t\tevents.publish('change_loading/done');\n\t\t\t}.bind(this), function(){\n\t\t\t\tevents.publish('change_loading/done');\n\t\t\t});\n\t\t},\n\n\t\tshowOptions: function() {\n\t\t\treturn this.props.tab.advanced_opts === 'true';\n\t\t},\n\n\t\tshowVerifyButton: function() {\n\t\t\tif(this.showOptions()) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn this.props.tab.field_type == 'textfield';\n\t\t},\n\n\t\tshaChosen: function() {\n\t\t\treturn (this.state.sha !== '');\n\t\t},\n\n\t\trender: function () {\n\t\t\tvar classes = classNames({\n\t\t\t\t\"tab-pane\": true,\n\t\t\t\t\"clearfix\": true,\n\t\t\t\t\"active\" : (this.props.selectedTab == this.props.tab.id)\n\t\t\t});\n\n\t\t\t// setup the dropdown or the text input for selecting a SHA\n\t\t\tvar selector;\n\t\t\tif (this.props.tab.field_type == 'dropdown') {\n\t\t\t\tvar changeHandler = this.changeHandler;\n\t\t\t\tif(this.showVerifyButton()) { changeHandler = this.SHAChangeHandler }\n\t\t\t\tselector = React.createElement(SelectorDropdown, {ref: \"sha_selector\", tab: this.props.tab, changeHandler: changeHandler})\n\t\t\t} else if (this.props.tab.field_type == 'textfield') {\n\t\t\t\tselector = React.createElement(SelectorText, {ref: \"sha_selector\", tab: this.props.tab, changeHandler: this.SHAChangeHandler})\n\t\t\t}\n\n\t\t\t// 'Advanced' options\n\t\t\tvar options = null;\n\t\t\tif(this.showOptions()) {\n\t\t\t\toptions = React.createElement(AdvancedOptions, {tab: this.props.tab, changeHandler: this.OptionChangeHandler})\n\t\t\t}\n\n\t\t\t// 'The verify button'\n\t\t\tvar verifyButton = null;\n\t\t\tif(this.showVerifyButton()) {\n\t\t\t\tverifyButton = React.createElement(VerifyButton, {disabled: !this.shaChosen(), changeHandler: this.changeHandler})\n\t\t\t}\n\n\t\t\treturn (\n\t\t\t\tReact.createElement(\"div\", {id: \"deploy-tab-\"+this.props.tab.id, className: classes}, \n\t\t\t\t\tReact.createElement(\"div\", {className: \"section\"}, \n\t\t\t\t\t\tReact.createElement(\"div\", {htmlFor: this.props.tab.field_id, className: \"header\"}, \n\t\t\t\t\t\t\tReact.createElement(\"span\", {className: \"numberCircle\"}, \"1\"), \" \", this.props.tab.field_label\n\t\t\t\t\t\t), \n\t\t\t\t\t\tselector, \n\t\t\t\t\t\toptions, \n\t\t\t\t\t\tverifyButton\n\t\t\t\t\t), \n\t\t\t\t\tReact.createElement(DeployPlan, {summary: this.state.summary, env_url: this.props.env_url})\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t});\n\n\tvar SelectorDropdown = React.createClass({displayName: \"SelectorDropdown\",\n\t\tcomponentDidMount: function() {\n\t\t\t$(React.findDOMNode(this.refs.sha)).select2({\n\t\t\t\t// Load data into the select2.\n\t\t\t\t// The format supports optgroups, and looks like this:\n\t\t\t\t// [{text: 'optgroup text', children: [{id: '<sha>', text: '<inner text>'}]}]\n\t\t\t\tdata: this.props.tab.field_data\n\t\t\t});\n\n\t\t\t// Trigger handler only needed if there is no explicit button.\n\t\t\tif(this.props.changeHandler) {\n\t\t\t\t$(React.findDOMNode(this.refs.sha)).select2().on(\"change\", this.props.changeHandler);\n\t\t\t}\n\t\t},\n\n\t\trender: function() {\n\t\t\t// From https://select2.github.io/examples.html \"The best way to ensure that Select2 is using a percent based\n\t\t\t// width is to inline the style declaration into the tag\".\n\t\t\tvar style = {width: '100%'};\n\n\t\t\treturn (\n\t\t\t\tReact.createElement(\"div\", null, \n\t\t\t\t\tReact.createElement(\"div\", {className: \"field\"}, \n\t\t\t\t\t\tReact.createElement(\"select\", {\n\t\t\t\t\t\t\tref: \"sha\", \n\t\t\t\t\t\t\tid: this.props.tab.field_id, \n\t\t\t\t\t\t\tname: \"sha\", \n\t\t\t\t\t\t\tclassName: \"dropdown\", \n\t\t\t\t\t        onChange: this.props.changeHandler, \n\t\t\t\t\t\t\tstyle: style}, \n\t\t\t\t\t\t\tReact.createElement(\"option\", {value: \"\"}, \"Select \", this.props.tab.field_id)\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t});\n\n\tvar SelectorText = React.createClass({displayName: \"SelectorText\",\n\t\trender: function() {\n\t\t\treturn(\n\t\t\t\tReact.createElement(\"div\", {className: \"field\"}, \n\t\t\t\t\tReact.createElement(\"input\", {\n\t\t\t\t\t\ttype: \"text\", \n\t\t\t\t\t\tref: \"sha\", \n\t\t\t\t\t\tid: this.props.tab.field_id, \n\t\t\t\t\t\tname: \"sha\", \n\t\t\t\t\t\tclassName: \"text\", \n\t\t\t\t\t\tonChange: this.props.changeHandler}\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t});\n\n\tvar VerifyButton = React.createClass({displayName: \"VerifyButton\",\n\t\trender: function() {\n\t\t\treturn (\n\t\t\t\tReact.createElement(\"div\", {className: \"\"}, \n\t\t\t\t\tReact.createElement(\"button\", {\n\t\t\t\t\t\tdisabled: this.props.disabled, \n\t\t\t\t\t\tvalue: \"Verify deployment\", \n\t\t\t\t\t\tclassName: \"btn btn-default\", \n\t\t\t\t\t\tonClick: this.props.changeHandler}, \n\t\t\t\t\t\t\"Verify deployment\"\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t});\n\n\tvar AdvancedOptions = React.createClass({displayName: \"AdvancedOptions\",\n\t\trender: function () {\n\t\t\treturn (\n\t\t\t\tReact.createElement(\"div\", {className: \"deploy-options\"}, \n\t\t\t\t\tReact.createElement(\"div\", {className: \"fieldcheckbox\"}, \n\t\t\t\t\t\tReact.createElement(\"label\", null, \n\t\t\t\t\t\t\tReact.createElement(\"input\", {\n\t\t\t\t\t\t\t\ttype: \"checkbox\", \n\t\t\t\t\t\t\t\tname: \"force_full\", \n\t\t\t\t\t\t\t\tonChange: this.props.changeHandler}\n\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\"Force full deployment\"\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t});\n\n\t/**\n\t * DeployPlan\n\t */\n\tvar DeployPlan = React.createClass({displayName: \"DeployPlan\",\n\t\tgetInitialState: function() {\n\t\t\treturn {\n\t\t\t\tloading_changes: false\n\t\t\t}\n\t\t},\n\t\tcomponentDidMount: function() {\n\t\t\tvar self = this;\n\t\t\t// register subscribers\n\t\t\tthis.loading = events.subscribe('change_loading', function () {\n\t\t\t\tself.setState({\n\t\t\t\t\tloading_changes: true\n\t\t\t\t});\n\t\t\t});\n\t\t\tthis.loadingDone = events.subscribe('change_loading/done', function () {\n\t\t\t\tself.setState({\n\t\t\t\t\tloading_changes: false\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\tdeployHandler: function(event) {\n\t\t\tevent.preventDefault();\n\t\t\t//@todo(stig): add a confirmation box\n\t\t\tconsole.log(this.props.summary.SecurityID);\n\t\t\tQ($.ajax({\n\t\t\t\ttype: \"POST\",\n\t\t\t\tdataType: 'json',\n\t\t\t\turl: this.props.env_url + '/start-deploy',\n\t\t\t\tdata: {\n\t\t\t\t\t// Pass the strategy object the user has just signed off back to the backend.\n\t\t\t\t\t'strategy': this.props.summary,\n\t\t\t\t\t'SecurityID': this.props.summary.SecurityID\n\t\t\t\t}\n\t\t\t})).then(function(data) {\n\t\t\t\twindow.location = data.url;\n\t\t\t}, function(data){\n\t\t\t\tconsole.error(data);\n\t\t\t});\n\t\t},\n\t\tcanDeploy: function() {\n\t\t\treturn (this.props.summary.validationCode===\"success\" || this.props.summary.validationCode===\"warning\");\n\t\t},\n\t\tisEmpty: function(obj) {\n\t\t\tfor (var key in obj) {\n\t\t\t\tif (obj.hasOwnProperty(key) && obj[key]) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\t\tshowNoChangesMessage: function() {\n\t\t\tvar summary = this.props.summary;\n\t\t\tif(summary.initialState === true) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(summary.messages === 'undefined') {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn (this.isEmpty(summary.changes) && summary.messages.length === 0);\n\t\t},\n\t\tactionTitle: function() {\n\t\t\tvar actionTitle = this.props.summary.actionTitle;\n\t\t\tif (typeof actionTitle === 'undefined' || actionTitle === '' ) {\n\t\t\t\treturn 'Make a selection';\n\t\t\t}\n\t\t\treturn this.props.summary.actionTitle;\n\t\t},\n\t\trender: function() {\n\t\t\tvar messages = this.props.summary.messages;\n\t\t\tif (this.showNoChangesMessage()) {\n\t\t\t\tmessages = [{\n\t\t\t\t\ttext: \"There are no changes but you can deploy anyway if you wish.\",\n\t\t\t\t\tcode: \"success\"\n\t\t\t\t}];\n\t\t\t}\n\t\t\tvar deployAction;\n\t\t\tif(this.canDeploy()) {\n\t\t\t\tdeployAction = (\n\t\t\t\t\tReact.createElement(\"div\", {className: \"section\"}, \n\t\t\t\t\t\tReact.createElement(\"button\", {\n\t\t\t\t\t\tvalue: \"Confirm Deployment\", \n\t\t\t\t\t\tclassName: \"deploy\", \n\t\t\t\t\t\tdisabled: !this.canDeploy(), \n\t\t\t\t\t\tonClick: this.deployHandler}, \n\t\t\t\t\t\tthis.actionTitle(), React.createElement(\"br\", null), \n\t\t\t\t\t\t\tReact.createElement(EstimatedTime, {estimatedTime: this.props.summary.estimatedTime})\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tvar headerClasses = classNames({\n\t\t\t\theader: true,\n\t\t\t\tinactive: !this.canDeploy(),\n\t\t\t\tloading: this.state.loading_changes\n\t\t\t});\n\n\t\t\treturn(\n\t\t\t\tReact.createElement(\"div\", null, \n\t\t\t\t\tReact.createElement(\"div\", {className: \"section\"}, \n\t\t\t\t\t\tReact.createElement(\"div\", {className: headerClasses}, \n\t\t\t\t\t\t\tReact.createElement(\"span\", {className: \"status-icon\"}), \n\t\t\t\t\t\t\tReact.createElement(\"span\", {className: \"numberCircle\"}, \"2\"), \" Review changes\"\n\t\t\t\t\t\t), \n\t\t\t\t\t\tReact.createElement(MessageList, {messages: messages}), \n\t\t\t\t\t\tReact.createElement(SummaryTable, {changes: this.props.summary.changes})\n\t\t\t\t\t), \n\t\t\t\t\tdeployAction\n\t\t\t\t)\n\t\t\t)\n\t\t}\n\t});\n\n\t/**\n\t * EstimatedTime\n\t */\n\tvar EstimatedTime = React.createClass({displayName: \"EstimatedTime\",\n\t\trender: function() {\n\t\t\tif (this.props.estimatedTime && this.props.estimatedTime>0) {\n\t\t\t\treturn (\n\t\t\t\t\tReact.createElement(\"small\", null, \"Estimated \", this.props.estimatedTime, \" min\")\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t});\n\n\tvar MessageList = React.createClass({displayName: \"MessageList\",\n\t\trender: function() {\n\t\t\tif(this.props.messages.length < 1) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif(typeof this.props.messages === 'undefined') {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tvar idx = 0;\n\t\t\tvar messages = this.props.messages.map(function(message) {\n\t\t\t\treturn React.createElement(Message, {key: idx, message: message})\n\t\t\t\tidx++;\n\t\t\t});\n\t\t\treturn (\n\t\t\t\tReact.createElement(\"div\", null, \n\t\t\t\t\tmessages\n\t\t\t\t)\n\t\t\t)\n\t\t}\n\t});\n\n\tvar Message = React.createClass({displayName: \"Message\",\n\t\trender: function() {\n\t\t\tvar classMap = {\n\t\t\t\t'error': 'alert alert-danger',\n\t\t\t\t'warning': 'alert alert-warning',\n\t\t\t\t'success': 'alert alert-info'\n\t\t\t};\n\t\t\tvar classname=classMap[this.props.message.code];\n\t\t\treturn (\n\t\t\t\tReact.createElement(\"div\", {className: classname, role: \"alert\"}, \n\t\t\t\t\tthis.props.message.text\n\t\t\t\t)\n\t\t\t)\n\t\t}\n\t});\n\n\t/**\n\t * @jsx React.DOM\n\t */\n\tvar SummaryTable = React.createClass({displayName: \"SummaryTable\",\n\t\tisEmpty: function(obj) {\n\t\t\tfor (var key in obj) {\n\t\t\t\tif (obj.hasOwnProperty(key) && obj[key]) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\t\trender: function() {\n\t\t\tvar changes = this.props.changes;\n\t\t\tif(this.isEmpty(changes)) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tvar idx = 0;\n\t\t\tvar summaryLines = Object.keys(changes).map(function(key) {\n\t\t\t\tif(changes[key].from != changes[key].to) {\n\t\t\t\t\treturn (\n\t\t\t\t\t\tReact.createElement(SummaryLine, {key: idx, name: key, from: changes[key].from, to: changes[key].to})\n\t\t\t\t\t)\n\t\t\t\t} else {\n\t\t\t\t\treturn (\n\t\t\t\t\t\tReact.createElement(UnchangedSummaryLine, {key: idx, name: key, value: changes[key].from})\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t\tidx++;\n\t\t\t});\n\n\t\t\treturn (\n\t\t\t\tReact.createElement(\"table\", {className: \"table table-striped table-hover\"}, \n\t\t\t\t\tReact.createElement(\"thead\", null, \n\t\t\t\t\t\tReact.createElement(\"tr\", null, \n\t\t\t\t\t\t\tReact.createElement(\"th\", null, \" \"), \n\t\t\t\t\t\t\tReact.createElement(\"th\", null, \"From\"), \n\t\t\t\t\t\t\tReact.createElement(\"th\", null, \"To\")\n\t\t\t\t\t\t)\n\t\t\t\t\t), \n\t\t\t\t\tReact.createElement(\"tbody\", null, \n\t\t\t\t\t\tsummaryLines\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t});\n\n\t/**\n\t * SummaryLine\n\t */\n\tvar SummaryLine = React.createClass({displayName: \"SummaryLine\",\n\t\trender: function() {\n\t\t\tvar from = this.props.from,\n\t\t\t\tto = this.props.to;\n\n\t\t\t// naive git sha detection\n\t\t\tif(from !== null && from.length === 40) {\n\t\t\t\tfrom = from.substring(0,7);\n\t\t\t}\n\t\t\t// naive git sha detection\n\t\t\tif(to !== null && to.length === 40) {\n\t\t\t\tto = to.substring(0,7);\n\t\t\t}\n\n\t\t\treturn (\n\t\t\t\tReact.createElement(\"tr\", null, \n\t\t\t\t\tReact.createElement(\"th\", {scope: \"row\"}, this.props.name), \n\t\t\t\t\tReact.createElement(\"td\", null, from), \n\t\t\t\t\tReact.createElement(\"td\", null, to)\n\t\t\t\t)\n\t\t\t)\n\t\t}\n\t});\n\n\n\tvar UnchangedSummaryLine = React.createClass({displayName: \"UnchangedSummaryLine\",\n\t\trender: function() {\n\t\t\tvar from = this.props.value;\n\t\t\t// naive git sha detection\n\t\t\tif(from !== null && from.length === 40) {\n\t\t\t\tfrom = from.substring(0,7);\n\t\t\t}\n\n\t\t\treturn (\n\t\t\t\tReact.createElement(\"tr\", null, \n\t\t\t\t\tReact.createElement(\"th\", {scope: \"row\"}, this.props.name), \n\t\t\t\t\tReact.createElement(\"td\", null, from), \n\t\t\t\t\tReact.createElement(\"td\", {className: \"text-center\"}, \n\t\t\t\t\t\tReact.createElement(\"span\", {className: \"label label-success\"}, \"Unchanged\")\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t}\n\t});\n\n\treturn {\n\t\trender: function(urls) {\n\t\t\tReact.render(\n\t\t\t\tReact.createElement(DeployDropDown, {\n\t\t\t\t\tproject_url: urls.project_url, \n\t\t\t\t\tenv_url: urls.env_url, \n\t\t\t\t\tenv_name: urls.env_name}),\n\t\t\t\tdocument.getElementById('deploy_form')\n\t\t\t);\n\t\t}\n\t}\n}(events, classNames));\n\nif (typeof urls != 'undefined') {\n\tdeploy.render(urls);\n}\n"],"sourceRoot":"/source/"}